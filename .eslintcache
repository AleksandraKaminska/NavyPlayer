[{"/Users/aleksandrakaminska/Desktop/navyplayer/src/reportWebVitals.ts":"1","/Users/aleksandrakaminska/Desktop/navyplayer/src/reducers/index.ts":"2"},{"size":416,"mtime":1607619197042,"results":"3","hashOfConfig":"4"},{"size":845,"mtime":1607619453763,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18rv8mf",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aleksandrakaminska/Desktop/navyplayer/src/reportWebVitals.ts",["10"],"/Users/aleksandrakaminska/Desktop/navyplayer/src/reducers/index.ts",["11","12","13","14"],{"ruleId":"15","severity":1,"message":"16","line":3,"column":25,"nodeType":"17","messageId":"18","endLine":3,"endColumn":57},{"ruleId":"19","severity":1,"message":"20","line":11,"column":58,"nodeType":"21","messageId":"22","endLine":11,"endColumn":61,"suggestions":"23"},{"ruleId":"15","severity":1,"message":"16","line":38,"column":28,"nodeType":"17","messageId":"18","endLine":38,"endColumn":53},{"ruleId":"15","severity":1,"message":"24","line":38,"column":29,"nodeType":"25","messageId":"26","endLine":38,"endColumn":41},{"ruleId":"15","severity":1,"message":"27","line":38,"column":43,"nodeType":"28","messageId":"29","endLine":38,"endColumn":49},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["30","31"],"Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","Argument 'action' should be typed.","Identifier","missingArgType",{"messageId":"32","fix":"33","desc":"34"},{"messageId":"35","fix":"36","desc":"37"},"suggestUnknown",{"range":"38","text":"39"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"38","text":"40"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[196,199],"unknown","never"]